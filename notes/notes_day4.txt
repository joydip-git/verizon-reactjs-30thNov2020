
toogle button

jkjhjlkjlkjlklj 

__proto__: some.prototype

var utility={

   getData:()=>{},
   addData:()=>{}

}

class Comp extends Component{}

Object.assign(Comp.prototype,utility)

Lifting the state up

Resuability:
Mixin:
HOC: Higher Order Component
RP: Render Prop


1. class component
2. state
3. lifecycle events
4. reusability (Mixin, RP, HOC)

16.8 version: APIs --> Hooks

state hook:
1. you can have as many states as you want
2. state could be of any type: primite or reference (string, an array, a JS object)
3. setXState does not merge, BUT REPLACES the old state by the new state
4. setXState has only two versions: setXState(newState) or setXState((ps)=>{return newState});

Effect Hook:

routing: (react-router-dom)--> useHistory, useLocation, useParams
redux: (react-redux)--> useSelector, useDispatch
useState, useEffect, useRef, useMemo, useReducer etc....

ref, createRef(), callback ref, forwardRef()





