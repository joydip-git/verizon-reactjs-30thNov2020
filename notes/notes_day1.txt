s/w required:
Node JS
Visual studio code

extensions for VS Code:
HTML Boilerplate
ES7 React/Redux/React-Native/JS snippets
Babel JavaScript
Babel ES6/ES7
vscode-icons
prettier code formatter

application:
app design is split into multiple pieces: component [hear, body]
root component: (app.js) puts together all those individual components (piecces)
bootstrapper file: (index.js) which loads the entire dynamic app design into the HTML file
template:(index.html) which is used to display the entire app design

client-side framework/libraries:
new features in JS (ES - 2015-v6, 2017-v7, 2018-v8, 2019-v9)
a. let keyword
b. const keyword
c. templated string and interpolation
d. object destructuring
e. spread operator
f. arrow function [incomplete]
g. optional argument with default value
h. rest parameter
(how to  create object JS -> object literal syntax, constructor function, create method)
i. class, super, extends, class properties, static property in class

c/c++--->compiler-->object code
java/c#-->compiler-->byte code/IL code-->JVM/CLR-->executable code

JS --> compiler -->compile code -->runtime -->execute the code
JS --> Node runtime -- v8 engine (compiles and executes the code) 

a.h
b.h

main.cpp
#include<a.h>
#in

modules in JS: individual files, it provides api to access members from that file, this way introduces reusability
module format: how do you export members from a file and import members in a file from other files
Common JS (CJS), Asynchronous Module Defibition (AMD), Universal Module Definition (UMD), System JS, ES6 module format

module loader: Require JS (understands AMD format, does not understand any other format)
convert your mdoule format--> AMD format

Browser does not understand modular JS code

JS files: root file -->

transpilation: convert your ES6 JS code to old JS code
transpiler: babel, typecsript etc.

const x = ()=>{} --> var x = function(){}
class A{} ---> function A(){} //ctor function

Babel
1. parses code
2. transformation (plugins)
3. prints
A.js (src)--> A.js (build)

useful links:
https://medium.com/@happymishra66/execution-context-in-javascript-319dd72e8e2c
from Joydip Mondal to everyone:    6:15 PM
https://github.com/lukehoban/es6features
from Joydip Mondal to everyone:    6:15 PM
http://es6-features.org/#Constants
from Joydip Mondal to everyone:    6:16 PM
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Inheritance_and_the_prototype_chain
from Joydip Mondal to everyone:    6:17 PM
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures
from Joydip Mondal to everyone:    6:17 PM
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions
from Joydip Mondal to everyone:    6:18 PM
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes/Private_class_fields
from Joydip Mondal to everyone:    6:19 PM
https://www.freecodecamp.org/news/javascript-modules-a-beginner-s-guide-783f7d7a5fcc/
from Joydip Mondal to everyone:    6:19 PM
https://www.jvandemo.com/a-10-minute-primer-to-javascript-modules-module-formats-module-loaders-and-module-bundlers/




